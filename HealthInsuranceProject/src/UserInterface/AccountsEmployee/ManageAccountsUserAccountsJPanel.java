/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AccountsEmployee;

import Business.UserAccount;
import Business.UserAccountDirectory;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Haripal
 */
public class ManageAccountsUserAccountsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageAccountsUserAccountsJPanel
     */
    JPanel UserProcessContainer;
    UserAccount userAccount;
    UserAccountDirectory userAccountDirectory;
    public ManageAccountsUserAccountsJPanel(JPanel UserProcessContainer,UserAccount userAccount) {
        initComponents();
        this.UserProcessContainer  = UserProcessContainer;
        this.userAccount = userAccount;
        userAccountDirectory = userAccount.getExchangeEnterprise().getAccountsOrganization().getUserAccountDirectory();
        Refresh();
    }
    
    public void Refresh()
    {
          int rowCount = UAjTable.getRowCount();
       for(int i = rowCount - 1; i>=0; i--)
       {
           ((DefaultTableModel)UAjTable.getModel()).removeRow(i);
       }
        
        ArrayList<UserAccount> uAList = userAccountDirectory.getUserDirectory();
        
        for(UserAccount ua : uAList)
        {
                       
          
            Object row[] = new Object[4];
            
            row[0] = ua;
            row[1] = ua.getPassword();
            
            row[2] = ua.getPerson();
            
            if(ua.isStatus())
            {
            row[3] = "Enabled";
            }
            else
            {
             row[3] = "Disabled";  
            }
            
            
            DefaultTableModel defTableModel = (DefaultTableModel)UAjTable.getModel();
                    defTableModel.addRow(row);
           
            
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        UAjTable = new javax.swing.JTable();
        enablejButton = new javax.swing.JButton();
        disablejButton = new javax.swing.JButton();
        backjButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 255, 0));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        UAjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "UserAccount", "Password", "Person", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(UAjTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 69, 375, 75));

        enablejButton.setText("Enable UserAccounts");
        enablejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enablejButtonActionPerformed(evt);
            }
        });
        add(enablejButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(348, 281, -1, -1));

        disablejButton.setText("Disable");
        disablejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disablejButtonActionPerformed(evt);
            }
        });
        add(disablejButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 232, -1, -1));

        backjButton.setText("Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });
        add(backjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 281, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void enablejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enablejButtonActionPerformed

        int selectedRowCount = UAjTable.getSelectedRowCount();
        if(selectedRowCount == 0)
        {
            JOptionPane.showMessageDialog(null,"Please select row");
            return;
        }
        //System.out.println("selected Row Count" + selectedRowCount);
        if(selectedRowCount <= 0 || selectedRowCount> UAjTable.getRowCount())
        {
            return;
        }
        //System.out.println("After selected Row Count");
        int selectedRow =  UAjTable.getSelectedRow();
        UserAccount selectedUA = (UserAccount)UAjTable.getValueAt(selectedRow, 0);
        selectedUA.setStatus(true);
        Refresh();
    }//GEN-LAST:event_enablejButtonActionPerformed

    private void disablejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disablejButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowCount = UAjTable.getSelectedRowCount();
        if(selectedRowCount == 0)
        {
            JOptionPane.showMessageDialog(null,"Please select row");
            return;
        }
        //System.out.println("selected Row Count" + selectedRowCount);
        if(selectedRowCount <= 0 || selectedRowCount> UAjTable.getRowCount())
        {
            return;
        }
        //System.out.println("After selected Row Count");
        int selectedRow =  UAjTable.getSelectedRow();
        UserAccount selectedUA = (UserAccount)UAjTable.getValueAt(selectedRow, 0);
        selectedUA.setStatus(false);
        Refresh();
    }//GEN-LAST:event_disablejButtonActionPerformed

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here
        UserProcessContainer.remove(this);
        CardLayout cardLayout =(CardLayout)UserProcessContainer.getLayout();
        cardLayout.previous(UserProcessContainer);
    }//GEN-LAST:event_backjButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable UAjTable;
    private javax.swing.JButton backjButton;
    private javax.swing.JButton disablejButton;
    private javax.swing.JButton enablejButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
