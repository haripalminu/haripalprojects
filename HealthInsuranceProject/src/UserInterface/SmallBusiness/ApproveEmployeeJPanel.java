/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SmallBusiness;

import Business.Customer;
import Business.CustomerDirectory;
import Business.Exchange.Exchange;
import Business.Plan;
import Business.PlanCatalouge;
import Business.UserAccount;
import Business.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Haripal
 */
public class ApproveEmployeeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ApproveEmployeeJPanel
     */
    JPanel UserProcessContainer;
    UserAccount userAccount;
    Exchange exchange;
    CustomerDirectory customerDirectory;
    public ApproveEmployeeJPanel(JPanel UserProcessContainer,UserAccount userAccount) {
        initComponents();
        this.UserProcessContainer = UserProcessContainer;
        this.userAccount = userAccount;
        exchange = userAccount.getExchangeEnterprise();
        customerDirectory  = exchange.getCustomerDirectory();
        Refresh();
    }
public void Refresh()
    {
       
        
        ArrayList<Customer> cList = customerDirectory.getCustomerDirectory();
        int rowCount = employeejTable.getRowCount();
       for(int i = rowCount - 1; i>=0; i--)
       {
           ((DefaultTableModel)employeejTable.getModel()).removeRow(i);
       }
                        
        for(Customer c : cList)
        {
         if(!(c.getSmallBusiness() == null)&&!(userAccount.getSmallBusiness() == null))
         {
          if(c.getSmallBusiness().equals(userAccount.getSmallBusiness()))
           { 
            Object row[] = new Object[4];
            
            row[0] = userAccount.getExchangeEnterprise();
            row[1] = c.getFirstName();
            row[2] = c;
            row[3] = c.getSSN();
            
            
            
           
           
          
            
            DefaultTableModel defTableModel = (DefaultTableModel)employeejTable.getModel();
                    defTableModel.addRow(row);
           }     
            
    }
    }
    }
 
                          
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeejTable = new javax.swing.JTable();
        rejectjButton = new javax.swing.JButton();
        backjButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Approve Employee");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 33, -1, -1));

        employeejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Exchange", "FirstName", "LastName", "SSN"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(employeejTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 58, -1, 93));

        rejectjButton.setText("Reject");
        rejectjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectjButtonActionPerformed(evt);
            }
        });
        add(rejectjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 324, -1, -1));

        backjButton.setText("Back >>");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });
        add(backjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(492, 324, -1, -1));

        jButton1.setText("Approve");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(291, 324, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void rejectjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectjButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowCount = employeejTable.getSelectedRowCount();
        if(selectedRowCount == 0)
        {
            JOptionPane.showMessageDialog(null,"Please select row");
            return;
        }

        if(selectedRowCount <= 0 || selectedRowCount> employeejTable.getRowCount())
        {
            return;
        }

        int selectedRow =  employeejTable.getSelectedRow();
        Customer selectedCustomer = (Customer)employeejTable.getValueAt(selectedRow, 2);
       
        selectedCustomer.setSmallBusinessStatus(false);
        Refresh();
        JOptionPane.showMessageDialog(null, "Employee Rejected");
    }//GEN-LAST:event_rejectjButtonActionPerformed

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here:
         UserProcessContainer.remove(this);
        CardLayout cardLayout =(CardLayout)UserProcessContainer.getLayout();
        cardLayout.previous(UserProcessContainer);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         int selectedRowCount = employeejTable.getSelectedRowCount();
        if(selectedRowCount == 0)
        {
            JOptionPane.showMessageDialog(null,"Please select row");
            return;
        }

        if(selectedRowCount <= 0 || selectedRowCount> employeejTable.getRowCount())
        {
            return;
        }

        int selectedRow =  employeejTable.getSelectedRow();
        Customer selectedCustomer = (Customer)employeejTable.getValueAt(selectedRow, 2);
       
        selectedCustomer.setSmallBusinessStatus(true);
        
        JOptionPane.showMessageDialog(null, "Employee Approved");
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton;
    private javax.swing.JTable employeejTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton rejectjButton;
    // End of variables declaration//GEN-END:variables
}
